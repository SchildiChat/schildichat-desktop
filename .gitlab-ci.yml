
stages:
  - test
  - build
  - build-web
  - deploy

default:
  interruptible:                   true
  retry:
    max: 2
    when:
      - runner_system_failure
      - unknown_failure
      - api_failure

variables:
  GIT_SUBMODULE_STRATEGY:          recursive
  CI_IMAGE:                        paritytech/ci-linux:production
  IMAGE_NAME:                      paritytech/schildichat-web
  DOCKER_TAG:                      ${CI_COMMIT_SHORT_SHA}
  VAULT_ADDR:                      "https://vault.parity-mgmt-vault.parity.io"
  VAULT_AUTH_PATH:                 "gitlab-parity-io-jwt"
  VAULT_AUTH_ROLE:                 "cicd_gitlab_parity_${CI_PROJECT_NAME}"
  HELM_SECRETS_DRIVER:             vals

.kubernetes-env:                   &kubernetes-env
  image:                           $CI_IMAGE
  tags:
    - kubernetes-parity-build

.pr-refs:                          &pr-refs
  rules:
    - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/                         # PRs

.common-refs:                      &common-refs
  rules:
    - if: $CI_COMMIT_REF_NAME == "master"
    - if: $CI_COMMIT_REF_NAME == "sc"
    - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/                         # PRs

.master-refs:                      &master-refs
  rules:
    - if: $CI_COMMIT_REF_NAME == "master"
    - if: $CI_COMMIT_REF_NAME == "sc"
    - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/                         # PRs

build-web:
  stage:                           build
  <<:                              *kubernetes-env
  script:
    - apt-get update
    - apt-get install -y vim curl git make gcc g++ python jq libsqlcipher-dev pkg-config libsecret-1-dev libarchive-tools openssl libssl-dev tcl gnupg
    - curl -sL https://deb.nodesource.com/setup_14.x | bash -
    - apt-get update
    - apt-get install -y nodejs
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
    - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
    - apt-get update
    - apt-get install yarn -y
    - make setup
    - make web
    - mkdir -p artifacts
    - cp ./element-web/dist/schildichat-web-$(cat ./element-web/webapp/version).tar.gz artifacts/schildichat-web.tar.gz
    - cp Dockerfile artifacts/
    - cp ./element-web/config.sample.json artifacts/
    - cp ./element-web/nginx/conf.d/default.conf artifacts/
    - cp ./element-web/webapp/version artifacts/
  artifacts:
    name:                          "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    when:                          on_success
    expire_in:                     3 hours
    paths:
      - ./artifacts/

build-docker:
  stage:                           build-web
  <<:                              *kubernetes-env
  variables:
    GIT_STRATEGY:                  none
    DOCKERFILE:                    Dockerfile
  image:                           quay.io/buildah/stable
  script:
    - cd artifacts
    - tar xfvz schildichat-web.tar.gz
    - buildah bud
      --format=docker
      --build-arg VCS_REF="${CI_COMMIT_SHA}"
      --build-arg BUILD_DATE="$(date -u '+%Y-%m-%dT%H:%M:%SZ')"
      --build-arg PROJECT_NAME="${CI_PROJECT_NAME}"
      --build-arg SCHILDI_DIR="schildichat-web-$(cat version)"
      --tag "$IMAGE_NAME:latest"
      --file "$DOCKERFILE" .

build-publish-docker:
  stage:                           build-web
  <<:                              *kubernetes-env
  variables:
    GIT_STRATEGY:                  none
    DOCKERFILE:                    Dockerfile
  image:                           quay.io/buildah/stable
  script:
    - cd artifacts
    - tar xfvz schildichat-web.tar.gz
    - rm -f schildichat-web.tar.gz
    - test "$Docker_Hub_User_Parity" -a "$Docker_Hub_Pass_Parity" ||
      ( echo "no docker credentials provided"; exit 1 )
    - buildah bud
      --format=docker
      --build-arg VCS_REF="${CI_COMMIT_SHA}"
      --build-arg BUILD_DATE="$(date -u '+%Y-%m-%dT%H:%M:%SZ')"
      --build-arg VERSION="${DOCKER_TAG}"
      --build-arg PROJECT_NAME="${CI_PROJECT_NAME}"
      --build-arg SCHILDI_DIR="schildichat-web-$(cat version)"
      --tag "$IMAGE_NAME:${DOCKER_TAG}"
      --tag "$IMAGE_NAME:latest"
      --file "$DOCKERFILE" .
    - echo "$Docker_Hub_Pass_Parity" |
      buildah login --username "$Docker_Hub_User_Parity" --password-stdin docker.io
    - buildah info
    - buildah push --format=v2s2 "$IMAGE_NAME:${DOCKER_TAG}"
    - buildah push --format=v2s2 "$IMAGE_NAME:latest"
  after_script:
    - buildah logout --all

#### stage:                        deploy

.deploy:                           &deploy-k8s
  script:
    - helm dependency update helm/
    # Temporary before ci is not setup for submodules
    - helm delete schildichat-web --namespace schildichat-web || echo "Already uninstalled"
    - cd kustomize
    - helm upgrade
        --install
        --timeout 300s
        --namespace schildichat-web
        --values ../helm/values.yaml
        --values ../helm/values-$ENVIRONMENT.yaml
        --set common.image.tag="$DOCKER_TAG"
        schildichat-web ../helm/ --post-renderer ./kustomize
    - kubectl get pods -n schildichat-web

deploy-stg:
  stage:                           deploy
  <<:                              *deploy-k8s
  <<:                              *kubernetes-env
  # change me to master-refs
  <<:                              *pr-refs
  variables:
    CI_IMAGE:                      "paritytech/kubetools:3.9.2"
    ENVIRONMENT:                   parity-stg
  environment:
    name:                          parity-stg

